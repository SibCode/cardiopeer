"use strict";(self["webpackChunkquasarapp"]=self["webpackChunkquasarapp"]||[]).push([[312],{75312:(e,n,i)=>{i.r(n),i.d(n,{default:()=>C});var t=i(83673);const r=(0,t._)("div",{class:"text-h3 text-weight-thin"},"Implementierung",-1),a={class:"q-my-xl"},s=(0,t._)("div",{class:"q-qb-sm text-h5"},"Hydrogen",-1),l=(0,t._)("p",null,' Hydrogen ist darauf ausgelegt einfach in eine Webseite oder Webapplikation eingebunden zu werden. Mehr dazu findet sich in der Dokumentation in der Quelle zu Hydrogen. Es lehnt sich dabei an Element an, einem ausührlichen Matrix-Client mit vielen Funktionen und will als "leichtestes Element" lediglich Grundfunktionen möglichst simpel überall verfügbar machen. ',-1),d=(0,t._)("div",{class:"q-my-xl text-grey"}," Quelle: https://matrix.org/docs/projects/client/hydrogen ",-1),o=(0,t._)("div",{class:"text-h6"},"Chat-Bots und Generierung von Chat-Räumen",-1),u=(0,t._)("p",null," Mit folgendem Code kann eine Raum für zwei User erstellt werden, sofern der Client (z.B. ein Bot auf einem Applikationsserver) authentifziert ist: ",-1),c=(0,t._)("p",null,' Dabei müssen lediglich die IDs der Nutzer, welche gematcht wurden, bekannt sein. Diese könnten nach der Registrierung und Profil-Erstellung hinterlegt werden. Die Funktion hat weitere Parameter, so können bereits der Raum Name über "name" und ein "topic" definiert werden. Falls gewünscht können auch bereits Regeln definiert werden in einen "preset". ',-1),m=(0,t._)("div",{class:"q-my-xl text-grey"}," Quelle: https://matrix.org/docs/spec/r0.0.0/client_server.html#post-matrix-client-r0-createroom ",-1),g=(0,t._)("div",{class:"text-h6"},"Einbindung von Hydrogen",-1),h=(0,t._)("p",null,' Die Einbindung von Hydrogen erfolgt über ein HTML-Element mit der id="app" und class="Hydrogen" in welchem der Chat gerendert wird. Siehe dazu die untenstehend angegebene Quelle zur Einbindung der Hydrogen-View-SDK. Da die matrix-sdk in diesem Projekt selbst die Variablen-Bezeichnung client verwendet sollte ein eigener Namespace verwendet werden, da Hydrogen im Beispiel die Konstante client Variable verbindet und dieses als Login benötigt, bzw. es sollte dieses verwendet werden. Dort sind lediglich noch Passwort und Nutzername zu übergeben. ',-1),p=(0,t._)("p",null," Danach muss im Beispiel der entsprechend kreierte Raum angegeben werden, um diesen zu rendern. ",-1),w=(0,t._)("p",null," Damit kann die gewünschte view initialisiert werden, in diesem Fall z.B. nur die Timeline des Chats (der Chatverlauf) mittels: ",-1),v=(0,t._)("div",{class:"q-my-xl text-grey"}," Quelle: https://github.com/vector-im/hydrogen-web/blob/master/doc/SDK.md ",-1);function b(e,n,i,b,f,k){const x=(0,t.up)("q-separator"),y=(0,t.up)("highlightjs"),_=(0,t.up)("q-page");return(0,t.wg)(),(0,t.j4)(_,null,{default:(0,t.w5)((()=>[r,(0,t.Wm)(x,{spaced:"",class:"midata-fade"}),(0,t._)("div",a,[s,l,d,o,u,(0,t.Wm)(y,{language:"javascript",code:"client.createRoom(invite: [coachID, coacheeID]);"}),c,m,g,h,(0,t.Wm)(y,{language:"javascript",code:"client.startWithLogin(loginOptions.password(username, password));"}),p,(0,t.Wm)(y,{language:"javascript",code:"const room = session.rooms.get(roomID);"}),w,(0,t.Wm)(y,{language:"javascript",code:"const view = new TimelineView(vm.timelineViewModel, viewClassForTile);\n        app.appendChild(view.mount());"}),v])])),_:1})}const f=(0,t.aZ)({name:"Impl"});var k=i(74260),x=i(24379),y=i(65869),_=i(7518),z=i.n(_);const D=(0,k.Z)(f,[["render",b]]),C=D;z()(f,"components",{QPage:x.Z,QSeparator:y.Z})}}]);