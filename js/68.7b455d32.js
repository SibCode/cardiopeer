"use strict";(self["webpackChunkquasarapp"]=self["webpackChunkquasarapp"]||[]).push([[68],{86068:(e,n,i)=>{i.r(n),i.d(n,{default:()=>w});var r=i(83673);const t=(0,r._)("div",{class:"text-h3 text-weight-thin"},"Cardiopeer",-1),a=(0,r._)("div",{class:"q-my-xl"},[(0,r._)("div",{class:"q-qb-sm text-h5"},"Einführung"),(0,r._)("p",null," Im Rahmen einer Seminararbeit an der Berner Fachhochschule galt es die Eingliederung eines Chats für Herzpatienten nach Aufenthalt in einer Rehabilitationsklinik in einer Applikation zu testen. Durch die Befragung von möglichen Nutzern wurde dafür ein Anwendungsfall konzipiert. Das Herz ist ein visuelles Ergebnis dieser Befragung. "),(0,r._)("div",{class:"text-h6"},"Anwendungsfall: Kommunikation zwischen Nutzern in der Rolle des Ratgebers und Ratsuchenden"),(0,r._)("p",null," Hier wird der Anwendungsfall für den Kommunikationsaufbau zwischen Ratgeber und Ratsuchender beschrieben. Ziel der Applikation sollte es sein, dass diese Elemente in einer Webapplikation, wie dieser hier, gebündelt integriert werden. Dabei könnte die Einführung und Startseite ähnlich wie diese aufgebaut sein und den Nutzer über das Projekt informieren. "),(0,r._)("div",{class:"text-h6"},"Schritt 1: Registrierung"),(0,r._)("p",null," Der Nutzer erfährt im Rahmen der Behandlung, Rehabilitierung oder über die Herzstiftung von dieser Webseite und Webapplikation und kann sich dort registrieren. Dazu muss ein Registrierungs-Formular verfügbar stehen, welches allenfalls geprüft werden kann, woraufhin diesem Nutzer ein Login erstellt werden kann. "),(0,r._)("div",{class:"text-h6"},"Schritt 2: Anmeldung"),(0,r._)("p",null," Der Nutzer kann sich mit seinen Anmeldungsdaten einloggen und ein Profil erstellen. Das Profil wird in Midata oder einem vergleichbaren Service gespeichert. Für zertifizierte Ratgeber wird bereits bei der Registrierung vermerkt, dass diese in der Rolle eines Ratgebers die Seite besuchen und ihre Angaben könnten allenfalls etwas differenzieren. Um die Modularität zu gewährleisten sollte dies als eigener Menupunkt und Erweiterung integriert werden, ähnlich wie hier Midata als Unterkategorie verwendet wird. "),(0,r._)("div",{class:"text-h6"},"Schritt 3: Auswahl von Ratgeber"),(0,r._)("p",null," Der Nutzer kann als Ratsuchender nun eine Auswahl treffen um sich mit Ratgeber in Kontakt zu setzen. Dabei werden ihm nur Ratgeber angezeigt, welche auch von den Präferenzen und Profilangaben her seinen Wünschen entsprechen. Auch wenn hier mehrere Ratgeber ausgewählt werden können, werden maximal zwei pro Ratsuchender gematcht (könnte auch auf 1 limitert werden, ist definitiv festzulegen / zu klären). "),(0,r._)("div",{class:"text-h6"},"Schritt 4: Bestätigung oder Ablehnung durch Ratgeber"),(0,r._)("p",null," Zertifizierte Nutzer in der Rolle des Ratgebers können einsehen, welche Nutzer sie als Ratgeber wünschen. Dabei können sie diese Anfragen jeweils Annehmen und eine Einladung senden, oder die Anfrage ablehnen. Ein Limit für Ratsuchende pro Ratgeber ist weniger sinnvoll, da diese selbst wählen können, wieviel und ob sie Kontakte betreuen möchten. Hier anzumerken ist, dass in den Anforderungen eine Kategorie für Kontakte vorgesehen ist, wo sich auch Ratsuchende untereinander allenfalls verknüpfen können. Da dies jedoch nicht direkt den Anwendungsfall betrifft wird dies und die vorgeschlagene Struktur nicht näher beleuchtet, sofern diese nicht relevant ist. "),(0,r._)("div",{class:"text-h6"},"Schritt 5: Generierung eines privaten Chat-Raums"),(0,r._)("p",null," Sobald die Einladung bestätigt wurde kann der Chat-Raum generiert werden. Dabei wird vorgeschlagen, dass ein Applikationsserver mit einem Roboter-Nutzer als Chat-Bot die Einladungen und Räume verwaltet. Dabei kann dieser, wie hier unter Matrix - Implementierung beschrieben, für die gematchten Nutzer einen Raum erstellen. Dies hat den Vorteil, das die Informationen über den Raum allenfalls auch in Midata persistiert werden können und Client-seitig doppelt geprüft werden kann, ob dieser Raum legitim ist, existiert und auch wirklich durch Hydrogen gerendert werden soll. Zusätzlich könnten die Profile auswählen, ob sie möchten, dass ihre Daten zur Verbesserung des Services anonym gesammelt werden - dabei könnte der Bot den Raum nach Begrüssung und einleitenden Worten nicht direkt wieder verlassen, sondern im Chat verbleiben um Daten zur Aktivität, Frequenz und Nutzung zu sammeln. Dabei müsste klar festgelegt werden was, warum gesammelt wird. Ebenfalls wichtig wäre hierbei, dass der Ratgeber die vollen Raum-Rechte erhält und allenfalls selbst den Bot aus dem Chat entfernen kann, selbst wenn initial zugestimmt wurde. "),(0,r._)("div",{class:"text-h6"},"Schritt 6: Kommunikation über den privaten Chat-Raum"),(0,r._)("p",null," Die Nutzer können nun in der Rolle des Ratgebers, bzw. in der Rolle des Ratsuchenden miteinander sicher über Matrix kommunizieren! Die Einbindung des Hydrogen-Clients wird unter Matrix - Implementierung angesprochen. ")],-1),s=(0,r._)("div",{class:"q-my-xl text-grey"}," Quelle: BTX8082 Living Case 2 Seminararbeit von Simon Bertschinger an der Berner Fachhochschule ",-1);function d(e,n,i,d,l,u){const h=(0,r.up)("q-separator"),g=(0,r.up)("q-page");return(0,r.wg)(),(0,r.j4)(g,null,{default:(0,r.w5)((()=>[t,(0,r.Wm)(h,{spaced:"",class:"midata-fade"}),a,(0,r.Wm)(h,{spaced:"",class:"midata-fade"}),s])),_:1})}var l=i(61959);const u=(0,r.aZ)({name:"Overview",setup(){return{slide:(0,l.iH)(1),autoplay:(0,l.iH)(!0)}}});var h=i(74260),g=i(24379),c=i(65869),o=i(7518),m=i.n(o);const b=(0,h.Z)(u,[["render",d]]),w=b;m()(u,"components",{QPage:g.Z,QSeparator:c.Z})}}]);